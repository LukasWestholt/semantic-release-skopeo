name: Create, test and publish

on:
    pull_request:
        branches:
            - main
    push:
        branches:
            - main

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Run linter
        run: npm run lint

  test:
      name: Verify Conditions Test and Prepare Publish Test
      runs-on: ubuntu-latest
      needs: [lint]
      services:
          mock-registry:
              image: registry:2
              ports:
                  - 5000:5000
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
          with:
            context: .
            push: false
            tags: test-image:latest
        - name: Run verifyConditions tests
          uses: addnab/docker-run-action@v3
          with:
            image: test-image:latest
            options: --env NODE_ENV=test

  dry-run-release:
      name: Dry Run Release
      runs-on: ubuntu-latest
      needs: [test]
      if: github.event_name == 'pull_request'
      steps:
          - name: Checkout code
            uses: actions/checkout@v2
          - name: Set up Node.js
            uses: actions/setup-node@v2
            with:
                node-version: '20'
          - name: Install dependencies
            run: npm install
          - name: Run semantic-release in dry-run mode
            run: npx semantic-release --dry-run
            env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  release:
      name: Release
      runs-on: ubuntu-latest
      needs: [test]
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      steps:
          - name: Checkout code
            uses: actions/checkout@v2
          - name: Set up Node.js
            uses: actions/setup-node@v2
            with:
                node-version: '20'
          - name: Install dependencies
            run: npm install
          - name: Run semantic-release
            run: npx semantic-release
            env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
